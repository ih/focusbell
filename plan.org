* NEXT: display data after session ends in summary.html
** handlers/home.py get data for past sessions and send to summary.html
** templates/summary.html display data for past sessions
* progress
** NEXT: make starting interval be based on last interval of last session
*** DONE home.py get last interval from previous session inside home.py Session handler
pass to template and use as the initial interval for the current session
*** DONE stop.html create a field that will have the value of the initialize interval as passed by Session handler, this will be read by alert.js

*** DONE alert.js set initial interval 
set interval variable based on the html field in stop.html
* purpose
help track and improve ability to focus
* design
** interface
*** login
start/focus button prominently displayed 

graphs with relevant data are also displayed on the page (only after stop? to encourage starting)
**** after start/focus is pressed
change start button to stop
*** focus bell
a periodic pop up that has two options

1. i was focused since the start/last alert
2. i was distracted at some point since the start/last alert

if 1. then the time until the next alert is shortened
else the time until the next alert is lengthened
*** stop
on the home page stop button replaces start button

when pressed alerts stop appearing

* infrastructure
** add google appengine to PATH
* implementation
** DONE authentication
use google users module

** home
*** add basic template for static html
**** TODO create function to determine template path given template name
*** pass FocusData instance for logged in user
** models
*** outline
**** Session
***** start_time
***** stop_time
***** user
reference to the user for this session
**** Alert
***** alert_time
time when lert is displayed
***** was_focused
***** session
a reference to the session the alert occurred in
***** interval
time that should elapse until next alert


**** user data
